// <SCRIPT language="JavaScript">

// Funções Comuns

//=====================================================================================
//Efeito	:	Função para tratar campos do tipo numéricos. Só permite caracteres de 0 a 9 e Enter.
//=====================================================================================
function FunTrtVlr() {
    if ((!((event.keyCode >= 48) && (window.event.keyCode <= 57))) && (event.keyCode != 13)) 
    {
		event.returnValue = false;
		return false;
  	 
    }
    return true;
}



//=====================================================================================
//Efeito	:	Função para tratar campos do tipo numéricos float. Só permite caracteres de 0 a 9, .  e Enter.
//=====================================================================================
function FunTrtVlrFloat(objCpo) {
	
    if ((!((event.keyCode >= 48) && (window.event.keyCode <= 57))) && (event.keyCode != 13) && (event.keyCode != 44)) // && (event.keyCode != 46)
    {
		event.returnValue = false;
		return false;
  	 
    }
    
    var vlrCpo = objCpo.value.split(",");
    
    if ((event.keyCode == 44) && (vlrCpo.length > 1)) {
		event.returnValue = false;
		return false;
	}
	
    return true;
}

function FunTrtVlrDec(vlrCpo) {
	var vlrs = vlrCpo.split(",");
	if (vlrs.length == 2) {
	  if (vlrs[0]) {
		if ((vlrs[0].length >= 1) && (vlrs[1].length >= 1)) {
			return true;
		}
		else {
			return false;
		}
	  }
	  else {
		return false;  
	  }
	}
	else {
		return true;
	}

}

function FunTrtCsaDec(vlrCpo,numCsaDec) {
	var vlrs = vlrCpo.split(",");
	if (vlrs.length == 2) {
		if (vlrs[1]) {
			if (vlrs[1].length <= parseInt(numCsaDec,10)) {
				return true;
			}
			else {
				return false;
			}
		}
		else {
			return false;
		}
	}
	else {
		return true;
	}
}

function FunVldVlrMor(vlr1, vlr2) {
	if (parseFloat(vlr1.replace(",",".")) > parseFloat(vlr2)) {
		return true;
	}
	return false;
}
//=====================================================================================
//Efeito	:	Função que substitui virgula por ponto
//=====================================================================================
function FunSbtVirgulaPonto(Str) {
    var regexp = /,/g
    return (Str.replace(regexp,"."));
}
//=====================================================================================
//Efeito	:	Função que substitui ponto por virgula
//=====================================================================================
function FunSbtPontoVirgula(Str) {
	return (Str.replace(".",","));
}


//=====================================================================================
//Efeito	:	Função para transforma todos os caracteres de uma string para maiusculo
//=====================================================================================
function FunTransMaiuscula(Str) {
	return (Str.toUpperCase());
}

//=====================================================================================
//Efeito	:	Função que substitui espaço por _
//=====================================================================================
function FunSbtEspacoStr(Str) {
    var regexp = / /g
    return (Str.replace(regexp,"_"));
}

//=====================================================================================
//Efeito	:	Função para comparar se duas horas são iguais
//=====================================================================================

function FunCmpHra(Hra1, Hra2) {
	var Hr1 = parseInt(Hra1.substring(0,2),10);
	var Hr2 = parseInt(Hra2.substring(0,2),10);
	var Min1 = parseInt(Hra1.substring(3,5),10);
	var Min2 = parseInt(Hra2.substring(3,5),10);

	if (Hr1 < Hr2) {
		return true;
	}	
	else {
		if ((Hr1 == Hr2) && (Min1 < Min2)) {
			return true;
		}
		else {
			return false;
		}
	}

}
//=====================================================================================
//Efeito	:	Função que substitui zero por vazio
//=====================================================================================
function FunSbtZeroVazio(Str) {
    var regexp = /0/g
    return (Str.replace(regexp,""));
}

//=====================================================================================
//Efeito	: Função de validação dos campos obrigatórios
//=====================================================================================
function FunVldCpoObr(campo, NomeCampo){
    if ((campo.value) == "") {
		alert("O campo " + NomeCampo + " é obrigatório!");
		return false;
    }
    return true;

}

//=====================================================================================
//Efeito	: Função de validação dos campos não obrigatórios
//=====================================================================================
function FunVldCpoNaoObr(campo){
    if ((campo.value) == "") {
		return "NULL";
    }
    return (campo.value);

}


//=====================================================================================
// Função que simula o Tab automático. É uma função padrão e não deve ser alterada.
//=====================================================================================

function funTrtEnrEvtDgt() {
    if(13 == window.event.keyCode) {
        
        window.event.returnValue = false;
        if("complete" == document.readyState) {
            parent.funTrtEnrEvtDgtEnr();
        };
        return;
        
    };
    
    var oSrcElement = window.event.srcElement;
    var value       = oSrcElement.getAttribute("value");
    
    if(value
    && (value.length == oSrcElement.getAttribute("maxLength"))
    && (document.selection.type.toUpperCase() == "NONE")) {
             
        var oElements      = document.forms[0].elements;
        var elementsLength = oElements.length;
        var i              = 0;
            
        for(i = 0; i < elementsLength; i++) {
            if(oElements[i] == oSrcElement) {
                
                for(i = i + 1; i < elementsLength; i++) {
                    if((oElements[i].tagName)
                    && (oElements[i].tagName.toUpperCase() == "INPUT")
                    && ((oElements[i].type.toUpperCase() == "PASSWORD")
                     || (oElements[i].type.toUpperCase() == "TEXT"))
                    && (! oElements[i].disabled)
                    && (! oElements[i].readOnly)
                    && (oElements[i].style.display.toUpperCase() != "NONE")
                    && (oElements[i].style.visibility.toUpperCase() != "HIDDEN")) {
                            
                        oElements[i].focus();
                        oElements[i].select();
                        break;
                        
                    };
                };
                break;
                
            };
        };
        
    };
};

//=====================================================================================
//Efeito	:	Função que simula o Tab automático
//=====================================================================================
function funTrtEnrEvtDgtEnter() {
	
    if (13 == window.event.keyCode){
		var oSrcElement = window.event.srcElement;
		var value       = oSrcElement.getAttribute("value");
		var sIndex      = oSrcElement.sourceIndex;
    
		if(value
		&& (document.selection.type.toUpperCase() == "NONE")) {
             
			var oElements      = document.forms[0].elements;
			var elementsLength = oElements.length;
			var i              = 0;
            
			for(i = 0; i < elementsLength; i++) {
				if(oElements[i].name == oSrcElement.getAttribute("name")) {
                	for(i = i + 1; i < elementsLength; i++) {
						if ((((oElements[i].tagName)
						&& (oElements[i].tagName.toUpperCase() == "INPUT")
						&& ((oElements[i].type.toUpperCase() == "PASSWORD")
						|| (oElements[i].type.toUpperCase() == "TEXT"))
						&& (! oElements[i].disabled)
						&& (! oElements[i].readOnly)
						&& (oElements[i].style.display.toUpperCase() != "NONE")
						&& (oElements[i].style.visibility.toUpperCase() != "HIDDEN"))
						|| 
						((oElements[i].tagName.toUpperCase() == "TEXTAREA")
						&& (! oElements[i].disabled)
						&& (! oElements[i].readOnly)
						&& (oElements[i].style.display.toUpperCase() != "NONE")
						&& (oElements[i].style.visibility.toUpperCase() != "HIDDEN")
						)
						||
						((oElements[i].tagName.toUpperCase() == "SELECT")
						&& (! oElements[i].disabled)
						&& (! oElements[i].readOnly)
						&& (oElements[i].style.display.toUpperCase() != "NONE")
						&& (oElements[i].style.visibility.toUpperCase() != "HIDDEN"))
						) && oElements[i].sourceIndex > sIndex) {
                            
	                        oElements[i].focus();
		                    oElements[i].select();
			                break;
                    };
                };
                break;
                
            };
        };
        
      };
   };
    
};

function funTrtEnrEvtDgtEnr() {
};
//=====================================================================================
//Efeito	:	formata a data no seguinte formato: dd/mm/aaaa
//Parâmetro	:	Data ->	campo data a ser formatado
//Retorno	:	insere a data formatada no campo.
//=====================================================================================

function FunFrmDat(Data){
    var ValorData = Data.value;
    var Dia = ""
	var Mes = ""
	var Ano = ""
	
	
    if ((ValorData.length) == 10) { // tem / ou -
		Dia = parseInt(ValorData.substring(0,2),10);
		Mes = parseInt(ValorData.substring(3,5),10);
		Ano = parseInt(ValorData.substring(6,10),10);
	
		if (((ValorData.substring(2,3)) != "/") || ((ValorData.substring(5,6)) != "/")) {
		    Data.value = (ValorData.substring(0,2)) + "/" + (ValorData.substring(3,5)) + "/" + (ValorData.substring(6,10));
					
		}
	}
	else {
		if ((ValorData.length) == 6) { // não tem / ou -
			Dia = parseInt(ValorData.substring(0,2),10);
			Mes = parseInt(ValorData.substring(2,4),10);
			Ano = parseInt(ValorData.substring(4,6),10);
	
			if ((Ano >= 50) & (Ano <= 99)) {
				Data.value = (ValorData.substring(0,2)) + "/" + (ValorData.substring(2,4)) + "/" + "19" + (ValorData.substring(4,6));
			}
			else {
			    Data.value = (ValorData.substring(0,2)) + "/" + (ValorData.substring(2,4)) + "/" + "20" + (ValorData.substring(4,6));
			}
			
		 }
		 else {
			if ((ValorData.length) == 8) { // formato: 10062002 ou 10-06-02
			    var tracinhoIni = parseInt(ValorData.substring(2,3),10);
			    var tracinhoFim = parseInt(ValorData.substring(5,6),10)		  
			    if ((isNaN(tracinhoIni)) & (isNaN(tracinhoFim))) { // formato 10-06-02
					Dia = parseInt(ValorData.substring(0,2),10);
					Mes = parseInt(ValorData.substring(3,5),10);
					Ano = parseInt(ValorData.substring(6,8),10);
					
				
					if ((Ano >= 50) & (Ano <= 99)) {
						Data.value = (ValorData.substring(0,2)) + "/" + (ValorData.substring(3,5)) + "/" + "19" + (ValorData.substring(6,8));
					}
					else {
						Data.value = (ValorData.substring(0,2)) + "/" + (ValorData.substring(3,5)) + "/" + "20" + (ValorData.substring(6,8));
					}		
					
			    
			    }
			    else { // formato 10062002
					trt = parseInt(ValorData.substring(1,2),10);
					if (!(isNaN(trt))) { // barrar formato 1/1/2002
					  Dia = parseInt(ValorData.substring(0,2),10);
					  Mes = parseInt(ValorData.substring(2,4),10);
					  Ano = parseInt(ValorData.substring(4,8),10);
					
					  Data.value = (ValorData.substring(0,2)) + "/" + (ValorData.substring(2,4)) + "/" + (ValorData.substring(4,8));
					}
					
				}
			}
		 }
	}

    
   
}

//=====================================================================================
//Efeito	:	Formata a hora no formato: hh:mm
//Parâmetro	:	Hra -> hora a ser formatada
//Retorna	:	insere a hora formatada no campo
//=====================================================================================

function FunFrmHra(Hra) {
	var ValorHra = Hra.value;
	var TamHra = ValorHra.length;
	var AuxHra = "";
	var AuxMto = "";
	
	if (TamHra == 5) { // formato: 12:30
	   AuxHra = ValorHra.substring(0,2);
	   AuxMto = ValorHra.substring(3,5);
	   Hora = parseInt(AuxHra,10);
	   Mto =  parseInt(AuxMto,10);
	   
	   if ((isNaN(Hora)) || (isNaN(Mto))) { // Não for número
			alert("A hora deve ser digitada no seguinte formato: hh:mm.");
			Hra.focus();
			return false;
	   }	
		
	   Hra.value = AuxHra + ":" + AuxMto;
	   
	}
	else {
		if ((TamHra == 1) || (TamHra == 2)) { // formato: 3 ou 14
			Hora = parseInt(ValorHra,10);
			  
		    if ((isNaN(Hora))) { // Não for número
				alert("A hora deve ser digitada no seguinte formato: hh:mm.");
				Hra.focus();
				return false;
			}	
			if (TamHra == 1) {
				Hra.value = "0" + ValorHra + ":00";
			}
			else {
			    if (TamHra == 2) {
					if (isNaN(parseInt(ValorHra.substring(1,2),10))) { // formato 2:					
						Hra.value = "0" + ValorHra + "00";
					}
					else { // formato 14
						Hra.value = ValorHra + ":00";	
					}
			    }
				
			}
	   
		}
		else {
			if (TamHra == 4) { // formato 12:3 ou 1230
			    if (isNaN(parseInt(ValorHra.substring(2,3),10))) { // formato 12:3
					AuxHra = ValorHra.substring(0,2);
				    AuxMto = ValorHra.substring(3,4);
					Hora = parseInt(AuxHra,10);
					Mto =  parseInt(AuxMto,10);
	   
					if ((isNaN(Hora)) || (isNaN(Mto))) { // Não for número
						alert("A hora deve ser digitada no seguinte formato: hh:mm.");
						Hra.focus();
						return false;
					}	
		
					Hra.value = ValorHra + "0";				
				
				}
				else { // formato 1230
				    AuxHra = ValorHra.substring(0,2);
				    AuxMto = ValorHra.substring(2,4);
					Hora = parseInt(AuxHra,10);
					Mto =  parseInt(AuxMto,10);
	   
					if ((isNaN(Hora)) || (isNaN(Mto))) { // Não for número
						alert("A hora deve ser digitada no seguinte formato: hh:mm.");
						Hra.focus();
						return false;
					}	
		
					Hra.value = AuxHra + ":" + AuxMto;				
				}
				
			}
			else {
				if (TamHra == 3) { // formato 12: ou 123
					if (isNaN(parseInt(ValorHra.substring(2,3),10))) { // formato 12:
						AuxHra = ValorHra.substring(0,2);
						Hora = parseInt(AuxHra,10);
						   
						if ((isNaN(Hora))) { // Não for número
							alert("A hora deve ser digitada no seguinte formato: hh:mm.");
							Hra.focus();
							return false;
						}	
		
						Hra.value = ValorHra + "00";				
				
					}
					else { // formato 123
						AuxHra = ValorHra.substring(0,2);
						AuxMto = ValorHra.substring(2,3);
						Hora = parseInt(ValorHra,10);
						   
						if ((isNaN(Hora))) { // Não for número
							alert("A hora deve ser digitada no seguinte formato: hh:mm.");
							Hra.focus();
							return false;
						}	
		
						Hra.value = AuxHra + ":" + AuxMto + "0";				
					
					}
				}
			}
		}
	}
}

//=====================================================================================
//Efeito	:	verifica se uma determinada data está correta.
//Parâmetro	:	Data ->	a data a ser validada
//				NomeCampo -> nome do campo data
//Retorno	:	False se a data estiver incorreta; True caso contrário
//=====================================================================================
function FunVldDat(Data) {
	var dat = Data;
	if (dat != "") {
			var Dia = ""
			var Mes = ""
			var Ano = ""
			if (((dat.substring(2,3)) != "/") || ((dat.substring(5,6)) != "/")) {
				return false;
			}

			Dia = parseInt(dat.substring(0,2),10);
			Mes = parseInt(dat.substring(3,5),10);
			Ano = parseInt(dat.substring(6,10),10)
			
			if ( (isNaN(Dia)) || (isNaN(Mes)) || (isNaN(Ano))) {				
				return false;
			}
			else {
				if ((Dia < 1) || (Dia > 31)) {
					return false;
				}
				if ((Mes < 1) || (Mes > 12) || (Ano < 1900)) {
					return false;
				}
				if (((Mes == 4) || (Mes == 6) || (Mes == 9) || (Mes == 11)) &&(Dia > 30)) {
					return false;
				}
				if (((Mes == 1) || (Mes == 3) || (Mes == 5) || (Mes== 7) || (Mes == 8) || (Mes == 10) || (Mes == 12)) && (Dia > 31)) {
					return false;			
				}
				//      Verifica o mês de fevereiro
				var AnoAux = Ano % 4
		
				if ((Mes == 2) && (AnoAux != 0) && (Dia > 28)) {
					return false;			
				}
				if ((Mes == 2) && (AnoAux == 0) && (Dia > 29)) {
					return false;			
				}
			}
	}
	return true;
}

// Função que verifica se strData é uma Data Válida no formato brasileiro
function EhData(strData) {

	intIndex  = 0;
	intLength = strData.length;
	
	if(intLength != 8) {
	    if(intLength != 10) {
	        return false;
	    }
	    else {
	        if( (strData.charAt(2) == '/') && (strData.charAt(5) == '/') ) {
	            strData = strData.substr(0, 2) + strData.substr(3, 2) + strData.substr(6, 4);
	        }
	        else {
	            return false;
	        };
	    };
	};
	
	for(intIndex = 0; intIndex < 8; intIndex ++) {
		if( (strData.charAt(intIndex) < '0') || (strData.charAt(intIndex) > '9') ) {
			return false;
		};
	};
	
	Dia = parseFloat( strData.substr(0, 2) );
	Mes = parseFloat( strData.substr(2, 2) );
	Ano = parseFloat( strData.substr(4, 4) );
		
	if(Dia < 1) {
		return false;
	};
	
	if( (Mes < 1) || (Mes > 12) ) {
		return false;
	};
	
	if( (Mes == 4) || (Mes == 6) || (Mes == 9) || (Mes == 11) ) {
		if(Dia > 30) {
			return false;
		};
	}
	else {
		if(Mes != 2) {
			if(Dia > 31) {
				return false;
			};
		}
		else {
			if(Ano%4 != 0) {
				if(Dia > 28) {
					return false;
				};
			}
			else {
				if(Dia > 29) {
					return false;
				};
			};
		};
	};
		
	return true;

};

//=====================================================================================
//Efeito	:	Função para validar um número
//=====================================================================================
function FunVldNum(Numero){
  for(i = 0; i < Numero.length; i++) {
	if (isNaN(parseInt(Numero.substring(i,i+1),10))) { // Não é numero
   			return false;
	}
  }	
  
  return true;	
}

//=====================================================================================
//Efeito	:	Função para validar um número e imprimir mensagens
//=====================================================================================

function FunVldNumMsg(Campo, NomeCampo) {
	if (!(FunVldNum(Campo.value))) {
		alert("O campo \"" + NomeCampo + "\" deve conter apenas digitos (números)!");
		Campo.focus();
		Campo.select();
		return false;
	}
	return true;
}

//Funções retiradas do livro: "JavaScript, A Bíblia"

function isEmpty(inputStr) {
	inputStr = Trim(inputStr);
	if (inputStr == "" || inputStr == null) {
		return true;
	}
	return false;
}


function inRange(inputStr, lo, hi) {
	var num = parseInt(inputStr, 10);
	if (num < lo || num > hi) {
		return false;
	}
	return true;
}

function formateDtHrVis(lDtHr) {
	var data = lDtHr.substring(0,10);
	var hora = lDtHr.substring(11,13);
	var min = lDtHr.substring(14,16);
	var seg = lDtHr.substring(17,19);
   
	return ((formatDate(data)) + " " +  hora + ":" + min + ":" + seg);
	
}


function formatVlrDecimal(vlr) {
		var vlrfrm;
		var vlrnaofrm;
		var separadorMilhar;
		
		vlrnaofrm = vlr.split(".");
		
		if (vlrnaofrm[0].length <= 3) {
			separadorMilhar = vlrnaofrm[0];
		}
		else {
			if (vlrnaofrm[0].length <= 6) {
				separadorMilhar = vlrnaofrm[0].substr(0,(vlrnaofrm[0].length - 3)) + "." + vlrnaofrm[0].substr((vlrnaofrm[0].length - 3),3)
			}
			else {
				if (vlrnaofrm[0].length <= 9) {
					separadorMilhar = vlrnaofrm[0].substr(0,(vlrnaofrm[0].length - 6)) + "." + vlrnaofrm[0].substr((vlrnaofrm[0].length - 6),3) + "." + vlrnaofrm[0].substr((vlrnaofrm[0].length - 3),3)
				}
			}
		}
		
		if (vlrnaofrm.length == 2) {
			if (vlrnaofrm[1].length == 1) {
				vlrfrm =  separadorMilhar + "," + vlrnaofrm[1] + "0";
			}
			else {
				if (vlrnaofrm[1].length == 0) {
					vlrfrm = separadorMilhar + ",00";
				}	
				else {
					vlrfrm = separadorMilhar + "," + vlrnaofrm[1];
				}
			}
		}
		else {
			vlrfrm = separadorMilhar + ",00";
		}
		
		
		return vlrfrm;
}
    
function formatDate(lDat)
{
  if ((lDat != null) && (lDat != "")) {
	var lDatAux = lDat.split("-");
	return lDatAux[2] + "/" + lDatAux[1] + "/" + lDatAux[0];
  }
  else {
  	return lDat;
  }
}

function formatDateBanco(lDat)
{
  if ((lDat != null) && (lDat != "")) {
	var lDatAux = lDat.split("/");
	return lDatAux[2] + "-" + lDatAux[1] + "-" + lDatAux[0];
  }
  else {
	return lDat;
  }
}
function formatHoraBanco(lHra) {
	if ((lHra != "") && ((lHra.length) != 8)) {
		return lHra + ":00";
	}
	else {
		return lHra;
	}
}


//Função encontrada no site www.ibm.com/ldd, disponibilizada para uso gratuito.

function Trim(strText)
{ // remove both leading and trailing spaces
	if (!strText || strText == "")
	{
		return "";
	}
	else
	{
		return rtrim(ltrim(strText));
	}
}

function rtrim(strText)
{ // remove trailing spaces
	var strNewText = strText + '';

	while((strNewText.length<1)?false:('' + strNewText.charAt(strNewText.length - 1)==' '))
	{
		strNewText = strNewText.substring(0,(strNewText.length - 1));
	}
	return strNewText;
}

function ltrim(strText)
{
	var strNewText = '' + strText;
	while('' + strNewText.charAt(0)==' ')
	{
		strNewText = strNewText.substring(1,strNewText.length);
	}
	return strNewText;
}

//=====================================================================================
//Efeito	:	verifica se uma data é maior que a outra
//Parâmetro	:	Data ->	a data a ser validada // formato yyyy-mm-dd
//Retorna	:	False se a data estiver incorreta; True caso contrário
//=====================================================================================

function FunVldDatMor(Data1, Data2) {
    return (Data2 > Data1);
};

//=====================================================================================
//Efeito	:	soma 30 dias em uma data 
//Parâmetro	:	Data ->	a data a ser transformada
//Retorna	:	a nova data
//=====================================================================================

function FunAdiMesDat(Data1) {
	var Dia1 = "";
	var Mes1= "";
	var Ano1 = "";

	Ano1 = parseInt(Data1.substring(0, 4),  10);
	Mes1 = parseInt(Data1.substring(5, 7),  10);
	Dia1 = parseInt(Data1.substring(8, 10), 10);   
    
    var Data2 = new Date(Ano1, Mes1 - 1,Dia1);
    Data2.setDate(Data2.getDate() + 60);

	return Data2.getFullYear() + "-" + ("00" + (Data2.getMonth() + 1)).slice(-2) + "-" + ("00" + Data2.getDate()).slice(-2);
}

//-----

function CriOpc(LstCod,LstDes) {
	if (LstCod.item(0)) {
		var z=0;
		if (LstCod.item(0).value != "0") {
			var lLstRet = new Array(LstCod.length + 1);
			lLstRet[z] = "<OPTION VALUE='0'>0-??? VARIAVEL</OPTION>";
			z++;
		} else {
			var lLstRet = new Array(LstCod.length);
		}
	
		for (i=0;i<LstCod.length;i++)
		{
			lLstRet[z] = "<OPTION VALUE='" + LstCod.item(i).value + "'>" + LstCod.item(i).value + "-"+ LstDes.item(i).value + "</OPTION>";
			z++;
		}
	} else {
		var lLstRet = new Array(LstCod.length);
	}
	return lLstRet;
}

// Função de Ajuste da Largura do Elemento Cabeçalho do Sistema

function funAjtLrgEleCabSis(oEleCabSis, intClientWidth) {
    if(oEleCabSis.style.pixelWidth < intClientWidth) {
        oEleCabSis.style.pixelWidth = intClientWidth
    }
    else {
        if(oEleCabSis.style.pixelWidth > intClientWidth) {
            if(oEleCabSis.style.pixelWidth > 760) {
                if(intClientWidth > 760) {
                    oEleCabSis.style.pixelWidth = intClientWidth
                }
                else {
                    oEleCabSis.style.pixelWidth = 760
                }
            }
        }
    }
};

// Função que verifica se strMoeda é um valor monetário no formato brasileiro

function EhMoeda(strMoeda) {
	
	chrMoeda  = ' ';
	intQdeDec = 0;
	intIndex  = 0;
	intLength = strMoeda.length;
    
    if(   isNaN(  parseFloat( strMoeda.replace(",", ".") )  )   ) {
        return false;
    };
	
	if(intLength < 1) {
	    return false;
	};
	
	for(intIndex = 0; intIndex < intLength; intIndex ++) {
        chrMoeda = strMoeda.charAt(intIndex);
		if( (chrMoeda < '0') || (chrMoeda > '9') ) {
			if(',' == chrMoeda) {
			    break;
			}
			else {
			    return false;
			};
		};
	};
	
	if(',' == chrMoeda) {
	    for(intIndex = intIndex + 1; intIndex < intLength; intIndex ++) {
            chrMoeda = strMoeda.charAt(intIndex);
            intQdeDec = intQdeDec + 1;
	        if( (chrMoeda < '0') || (chrMoeda > '9') || (intQdeDec > 2) ) {
	        	return false;
	        };
        };
    };
    
    return true;
};


//=====================================================================================
//Efeito	:	Função para Colocar máscara de formato data no campo enquanto digita
//=====================================================================================

function FunTrtFrmDat()
{ 
	var DatAux = '', Cpo = event.srcElement; 
	DatAux = DatAux + Cpo.value; 
	
	
	if (DatAux.length == 2)
	{
		DatAux = DatAux + '/'; 
		Cpo.value = DatAux;
	} 
	if (DatAux.length == 5)
	{ 
		DatAux = DatAux + '/'; 
		Cpo.value = DatAux;
	} 
} 

//=====================================================================================
//Efeito	:	Adiciona a quantidade de dias informada em uma data e retorna a nova data
//Parâmetro	:	strDate ->	data a ser adicionada os dias formato mm/dd/yyyy
//          :   intDays ->  quantidade de dias a serem adicionados
//Retorna	:	a nova data
//=====================================================================================
function FunAdiDiaDat(strDate,intDays){
	strDate = Date.parse(strDate);
    strDate = parseInt(strDate, 10);
    strDate = strDate + intDays*(24*60*60*1000);
    strDate = new Date(strDate);
    month   = strDate.getMonth()+1;
    day     = strDate.getDate();
    year    = strDate.getFullYear();
	if(month <= 9){
	  month = "0" + month
	}
	if(day <= 9){
	  day = "0" + day
	}
    return (day + '/' + month + '/' + year);
}

function FunMesDiaAno(strDat) {
  if ((strDat != null) && (strDat != "")) {
	var lDatAux = strDat.split("-");
	return lDatAux[1] + "/" + lDatAux[2] + "/" + lDatAux[0];
  }
  else {
  	return strDat;
  }
}

function SelBtnRpv(flgSel) {
	if (flgSel) {
		if (window.parent.document.all.ImgRpv) {
			window.parent.document.all.ImgRpv.tabindex = "4";
			window.parent.document.all.ImgRpv.src = "images/ArqImgRep.gif"
			window.parent.document.all.ImgRpv.style.display = ""
			window.parent.document.all.ImgRpv.style.visibility = "visible"
		}	
	}
	else {	
		if (window.parent.document.all.ImgRpv) {
			window.parent.document.all.ImgRpv.tabindex = "-1";
			window.parent.document.all.ImgRpv.src = "images/ArqImgBrc.jpg"
			window.parent.document.all.ImgRpv.style.display = "none"
			window.parent.document.all.ImgRpv.style.visibility = "hidden"
		}	
	}
}
function SelBtnApv(flgSel) {
	if (flgSel) {
		if (window.parent.document.all.ImgApv) {
			window.parent.document.all.ImgApv.tabindex = "4";
			window.parent.document.all.ImgApv.src = "images/ArqImgApv.gif"
			window.parent.document.all.ImgApv.style.display = ""
			window.parent.document.all.ImgApv.style.visibility = "visible"
		}	
	}
	else {	
		if (window.parent.document.all.ImgApv) {
			window.parent.document.all.ImgApv.tabindex = "-1";
			window.parent.document.all.ImgApv.src = "images/ArqImgBrc.jpg"
			window.parent.document.all.ImgApv.style.display = "none"
			window.parent.document.all.ImgApv.style.visibility = "hidden"
		}	
	}
}
function SelBtnFim(flgSel) {
	if (flgSel) {
		if (window.parent.document.all.ImgFim) {
			window.parent.document.all.ImgFim.tabindex = "4";
			window.parent.document.all.ImgFim.src = "images/ArqImgFim.gif"
			window.parent.document.all.ImgFim.style.display = ""
			window.parent.document.all.ImgFim.style.visibility = "visible"
		}	
	}
	else {	
		if (window.parent.document.all.ImgFim) {
			window.parent.document.all.ImgFim.tabindex = "-1";
			window.parent.document.all.ImgFim.src = "images/ArqImgBrc.jpg"
			window.parent.document.all.ImgFim.style.display = "none"
			window.parent.document.all.ImgFim.style.visibility = "hidden"
		}	
	}
}
function SelBtnAlt(flgSel) {
	if (flgSel) {
		if (window.parent.document.all.ImgAlt) {
			window.parent.document.all.ImgAlt.tabindex = "4";
			window.parent.document.all.ImgAlt.src = "images/ImgINAEdi01.gif"
			window.parent.document.all.ImgAlt.style.display = ""
			window.parent.document.all.ImgAlt.style.visibility = "visible"
		}	
	}
	else {	
		if (window.parent.document.all.ImgAlt) {
			window.parent.document.all.ImgAlt.tabindex = "-1";
			window.parent.document.all.ImgAlt.src = "images/ArqImgBrc.jpg"
			window.parent.document.all.ImgAlt.style.display = "none"
			window.parent.document.all.ImgAlt.style.visibility = "hidden"
		}	
	}
}
function SelBtnGrv(flgSel) {
	if (flgSel) {
		if (window.parent.document.all.ImgEnv) {
			window.parent.document.all.ImgEnv.tabindex = "4";
			window.parent.document.all.ImgEnv.src = "images/ArqImgEnv.gif"
			window.parent.document.all.ImgEnv.style.display = ""
			window.parent.document.all.ImgEnv.style.visibility = "visible"
		}	
	}
	else {	
		if (window.parent.document.all.ImgEnv) {
			window.parent.document.all.ImgEnv.tabindex = "-1";
			window.parent.document.all.ImgEnv.src = "images/ArqImgBrc.jpg"
			window.parent.document.all.ImgEnv.style.display = "none"
			window.parent.document.all.ImgEnv.style.visibility = "hidden"
		}	
	}
}

function SelBtnEnv(flgSel) {
	if (flgSel) {
		if (window.parent.document.all.ImgEnv) {
			window.parent.document.all.ImgEnv.tabindex = "4";
			window.parent.document.all.ImgEnv.src = "images/ArqImgEnv.gif"
			window.parent.document.all.ImgEnv.style.display = ""
			window.parent.document.all.ImgEnv.style.visibility = "visible"
		}	
	}
	else {	
		if (window.parent.document.all.ImgEnv) {
			window.parent.document.all.ImgEnv.tabindex = "-1";
			window.parent.document.all.ImgEnv.src = "images/ArqImgBrc.jpg"
			window.parent.document.all.ImgEnv.style.display = "none"
			window.parent.document.all.ImgEnv.style.visibility = "hidden"
		}	
	}
}

//=====================================================================================
//Efeito	:	Função para popular os campos retornados pelo popup 
//=====================================================================================
function AtrVlrObsApv(DesObs) {		
	window.document.all.txtDesObsOcl.value = DesObs;
	parent.document.all.btnApv.click();
	
}
function AtrVlrObsRpv(DesObs) {		
	window.document.all.txtDesObsOcl.value = DesObs;
	parent.document.all.btnRpv.click();
	
}
function funAbrTlaObsFim() {
	parent.document.all.btnFim.click();
}
function funBtnAlt() {
	window.parent.document.all.txtEditar.value = "0";
	parent.document.all.btnAlt.click();
	
}
function funBtnGrv() {
	window.parent.document.all.txtEditar.value = "0";
	parent.document.all.btnGrv.click();
}

function funAbrTlaObsApv() {
	var DesObs;
	DesObs = window.showModalDialog("DocVAKObsApvRpv.aspx", "Apv", "dialogWidth:480px; dialogHeight:200px;center:yes;resizable:no;scroll:no;status:no");

	window.document.all.txtDesObsOcl.value = DesObs;
	parent.document.all.btnApv.click();
	window.parent.document.all.txtFimAco.value = "1";
		
}	
function funAbrTlaObsRpv() {
	var DesObs;
	DesObs = window.showModalDialog("DocVAKObsApvRpv.aspx", "Rpv", "dialogWidth:480px; dialogHeight:200px;center:yes;resizable:no;scroll:no;status:no");
	if (DesObs) {
		window.document.all.txtDesObsOcl.value = DesObs;
		parent.document.all.btnRpv.click();
		window.parent.document.all.txtFimAco.value = "1";
	}	
}	

function funIniSelBtnApvRpv() {
	// Valida a permissão dos botões 
	var flgTipUsr = window.parent.document.all.txtFlgTipUsr.value;
	var staDoc = window.parent.document.all.txtStaDoc.value;
	var fimAco = window.parent.document.all.txtFimAco.value;
	// Aprovar e Reprovar
	// Analista de credito ou o gerente de vendas 
	// Se for gv, status = 1 ou 2 ou 6
	// Se for analista, quando status = 2 ou 3
		
	switch (flgTipUsr) {
		case "GERVND" : {
			SelBtnFim(false);	
			if ((staDoc) && ((staDoc == "1") || (staDoc == "2") || (staDoc == "6"))) {
				if (fimAco != "1") {
					SelBtnRpv(true);	
					SelBtnApv(true);	
				}	
			}
			else {
				SelBtnRpv(false);	
				SelBtnApv(false);	
			}	
			SelBtnAlt(false);
			break;
		}
		case "ANSCRD" : {
			if ((staDoc) && ((staDoc == "2") || (staDoc == "3"))) {
				if (fimAco != "1") {
					SelBtnRpv(true);	
					SelBtnApv(true);	
				}	
				SelBtnFim(false);	
			}
			else {
				if ((staDoc) && (staDoc == "10")) {
					SelBtnFim(true);	
				}
				else {
					SelBtnFim(false);	
				}
				SelBtnRpv(false);	
				SelBtnApv(false);	
			}	
			if ((staDoc) && ((staDoc == "5") || (staDoc == "7") || (staDoc == "11") || (staDoc == "13"))) {
				SelBtnAlt(false);
				SelBtnGrv(false);
			}
			else {
				var selBtnAlt = window.parent.document.all.txtEditar;
				if (selBtnAlt) {
					if (selBtnAlt.value == "") {
						SelBtnAlt(true);
						SelBtnGrv(false);
					}
					else {
						SelBtnAlt(false);
						SelBtnGrv(true);
					}	
				}	
			}			
			break;
		}
		default : {
			SelBtnRpv(false);	
			SelBtnApv(false);
			SelBtnFim(false);
			SelBtnAlt(false);		
			break;
		}
	}
}

function funIniSelBtnEnv() {
	var jaEnviou = window.parent.document.all.txtJaEnviou.value;

	if (jaEnviou != "1") {
		SelBtnEnv(true); 
	}
	else {
		SelBtnEnv(false); 
	}	
	//troca2();
}		